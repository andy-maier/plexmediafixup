# plexmediafixup config file

# Path name of PlexAPI config file. Omitting this value or specifying null
# causes the default to be used (i.e. env var PLEXAPI_CONFIG_PATH or
# ~/.config/plexapi/config.ini).
plexapi_config_path: null

# Flag controlling whether connection is directly to the Plex Media Server
# (true) or indirectly via the plex.tv web site (false). Using direct
# connection requires the PlexAPI config file parameters auth.server_baseurl
# and auth.server_token to be set. Using indirect connection requires the
# PlexAPI config file parameters auth.myplex_username and auth.myplex_password
# to be set, as well as the server_name parameter in this config file.
direct_connection: true

# Server name of the Plex Media Server. This is not the IP address or host
# name, but the server name that can be found in the top left corner of the
# Plex web GUI. This parameter is only required for indirect connection.
server_name: "SERVERNAME"

# List of fixups that should be run. Fixups can be specified more than once.
# The enabled fixups in this list will be run, in order.
#
# Each fixup has the following general parameters:
#
# * name: Name of the fixup. This is the module name (= base file name) in the
#   plexmediafixup/fixups directory. Required.
#
# * enabled: Boolean flag controlling whether the fixup should run. Required.
#
# * kwargs: An object (=dict) with fixup-specific parameters that are passed
#   to the fixup. These parameters are described below for each fixup.
#
fixups:

  # sync_sort_title is a fixup that walks through the movie, show and episode
  # items of the configured library sections, and syncs the "sort title" field
  # of each item by setting it to the value of its "title" field.
  - name: sync_sort_title
    enabled: true
    kwargs:

      # String or list of strings that specify the library section types that
      # should be processed. Valid values are: 'movie', 'show'. For 'show',
      # both the show item itself and its episodes will be processed. A value
      # null means to process all valid section types. Optional, default is
      # null.
      section_types: null

      # String that specifies a regex pattern defining library section names
      # that should be processed within the configured section types. A value
      # of null means to process all library sections of the configured types.
      # Optional, default is null.
      section_pattern: null
